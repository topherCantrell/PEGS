' Cluster 'game'
' MEM(M_INPUTMODE)=2
  long  %10_111_001__01_000_011_10111010_0000_1011
    long %00000000_000000000000_000000000010
    long %1000000000111100000010011

' ballx=24
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010001_000000000000_000000011000

' bally=16
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010010_000000000000_000000010000

' dx=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010011_000000000000_000000000001

' dy=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010100_000000000000_000000000001

' delx=5
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010101_000000000000_000000000101

' dely=8
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010110_000000000000_000000001000

' ctrx=5
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010111_000000000000_000000000101

' ctry=8
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011000_000000000000_000000001000

' scorePlayer1 = 0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011010_000000000000_000000000000

' scorePlayer2 = 0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011011_000000000000_000000000000

' call Sound:init
  long %0_000_001_0000000000000001_000000000

' _if_1_1:
' _if_1_expression:
' _loop_1_start:
' _loop_1_continue:
' 1
  long  %10_111_001__00_000_111_00101010_0111_1011
    long %00000000_000000000000_000000000001

' BRANCH-IFNOT _if_1_false
  long %0_000_010_1111111111111111_010010100

' _if_1_true:
' call graphics:clearScreen
  long %0_000_001_0000000000000011_000000100

' y = mem(0x7800)
  long  %10_111_001__01_000_110_10001011_0000_1011
    long %00000111_000000000000_000000000000
    long %1000000000111100000000000

' call convertAnalogStick
  long %0_000_001_1111111111111111_011111010

' _if_2_1:
' _if_2_expression:
' y<2
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000111_000000000000_000000000010

' BRANCH-IFNOT _if_2_false
  long %0_000_010_1111111111111111_000100101

' _if_2_true:
' y=2
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000010

' _if_3_1:
' _if_3_expression:
' _if_2_end:
' _if_2_false:
' y>29
  long  %10_111_001__00_000_111_10001010_0101_1011
    long %00000111_000000000000_000000011101

' BRANCH-IFNOT _if_3_false
  long %0_000_010_1111111111111111_000101010

' _if_3_true:
' y=29
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000011101

' _if_3_end:
' _if_3_false:
' x = 2
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000110_000000000000_000000000010

' z = y
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000001_000000000000_000000000111

' w = 2
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000010_000000000000_000000000010

' player1Y = z
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00001111_000000000000_000000000001

' call drawPaddle
  long %0_000_001_1111111111111111_011101110

' y = mem(0x7808)
  long  %10_111_001__01_000_110_10001011_0000_1011
    long %00000111_000000000000_000000000000
    long %1000000000111100000001000

' call convertAnalogStick
  long %0_000_001_1111111111111111_011111010

' _if_4_1:
' _if_4_expression:
' y<2
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000111_000000000000_000000000010

' BRANCH-IFNOT _if_4_false
  long %0_000_010_1111111111111111_000111100

' _if_4_true:
' y=2
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000010

' _if_5_1:
' _if_5_expression:
' _if_4_end:
' _if_4_false:
' y>29
  long  %10_111_001__00_000_111_10001010_0101_1011
    long %00000111_000000000000_000000011101

' BRANCH-IFNOT _if_5_false
  long %0_000_010_1111111111111111_001000001

' _if_5_true:
' y=29
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000011101

' _if_5_end:
' _if_5_false:
' x = 45
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000110_000000000000_000000101101

' z = y
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000001_000000000000_000000000111

' w = 2
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000010_000000000000_000000000010

' player2Y = z
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00010000_000000000000_000000000001

' call drawPaddle
  long %0_000_001_1111111111111111_011101110

' call moveBall
  long %0_000_001_1111111111111111_010010100

' _if_6_1:
' _if_6_expression:
' ballstatus==5
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011001_000000000000_000000000101

' BRANCH-IFNOT _if_6_false
  long %0_000_010_1111111111111111_001010011

' _if_6_true:
' call sound:missBall
  long %0_000_001_0000000000000001_000000111

' scorePlayer2=scorePlayer2+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00011011_000000011011_000000000001

' ballx=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010001_000000000000_000000000011

' _if_7_1:
' _if_7_expression:
' _if_6_end:
' _if_6_false:
' ballstatus==6
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011001_000000000000_000000000110

' BRANCH-IFNOT _if_7_false
  long %0_000_010_1111111111111111_001011011

' _if_7_true:
' call sound:missBall
  long %0_000_001_0000000000000001_000000111

' scorePlayer1=scorePlayer1+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00011010_000000011010_000000000001

' ballx=44
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010001_000000000000_000000101100

' _if_8_1:
' _if_8_expression:
' _if_7_end:
' _if_7_false:
' scorePlayer1==10
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011010_000000000000_000000001010

' BRANCH-IF _if_8_true
  long %0_000_011_1111111111111111_001100001

' _if_8_2:
' scorePlayer2==10
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011011_000000000000_000000001010

' BRANCH-IFNOT _if_8_false
  long %0_000_010_1111111111111111_001100011

' _if_8_true:
' call sound:playerWin
  long %0_000_001_0000000000000001_000001010

' stop
  long %0_000_111_0000000000000000000000000

' _if_9_1:
' _if_9_expression:
' _if_8_end:
' _if_8_false:
' ballstatus==1
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011001_000000000000_000000000001

' BRANCH-IFNOT _if_9_false
  long %0_000_010_1111111111111111_001111011

' _if_10_1:
' _if_10_expression:
' _if_9_true:
' ballx<=23
  long  %10_111_001__00_000_111_10001010_0100_1011
    long %00010001_000000000000_000000010111

' BRANCH-IFNOT _if_10_false
  long %0_000_010_1111111111111111_001101111

' _if_10_true:
' ballx=ballx+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00010001_000000010001_000000000001

' dx=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010011_000000000000_000000000001

' call sound:player1hit
  long %0_000_001_0000000000000001_000000001

' GOTO _if_10_end
  long %0_000_000_1111111111111111_001110100

' _if_10_false:
' ballx=ballx-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00010001_000000010001_000000000001

' dx=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010011_000000000000_000000000000

' call sound:player2hit
  long %0_000_001_0000000000000001_000000100

' _if_10_end:
' x=ballx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000110_000000000000_000000010001

' y=bally
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000111_000000000000_000000010010

' c=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00001000_000000000000_000000000001

' call graphics:plot
  long %0_000_001_0000000000000011_000010000

' _if_9_end:
' _if_9_false:
' x=8
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000110_000000000000_000000001000

' y=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000001

' val=scorePlayer1
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000000_000000000000_000000011010

' w=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000010_000000000000_000000000011

' z=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000001_000000000000_000000000011

' call score:drawDigit
  long %0_000_001_0000000000000010_000000000

' x=32
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000110_000000000000_000000100000

' y=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000001

' val=scorePlayer2
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000000_000000000000_000000011011

' w=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000010_000000000000_000000000011

' z=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000001_000000000000_000000000011

' call score:drawDigit
  long %0_000_001_0000000000000010_000000000

' call graphics:refreshScreen
  long %0_000_001_0000000000000011_000000000

' pause 10ms
  long %0_010_0000000011000011010100000000

' GOTO _loop_1_start
  long %0_000_000_1111111111111111_000011000

' MoveBall:
' _loop_1_end:
' _if_1_end:
' _if_1_false:
' ballstatus=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000000

' ctry=ctry-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00011000_000000011000_000000000001

' _if_11_1:
' _if_11_expression:
' ctry==0
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00011000_000000000000_000000000000

' BRANCH-IFNOT _if_11_false
  long %0_000_010_1111111111111111_010111001

' _if_11_true:
' ctry=dely
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00011000_000000000000_000000010110

' _if_12_1:
' _if_12_expression:
' dy==1
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010100_000000000000_000000000001

' BRANCH-IFNOT _if_12_false
  long %0_000_010_1111111111111111_010101101

' _if_13_1:
' _if_13_expression:
' _if_12_true:
' bally==31
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010010_000000000000_000000011111

' BRANCH-IFNOT _if_13_false
  long %0_000_010_1111111111111111_010101010

' _if_13_true:
' bally=30
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010010_000000000000_000000011110

' dy=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010100_000000000000_000000000000

' ballstatus=4
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000100

' GOTO _if_13_end
  long %0_000_000_1111111111111111_010101100

' _if_13_false:
' bally=bally+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00010010_000000010010_000000000001

' _if_13_end:
' GOTO _if_12_end
  long %0_000_000_1111111111111111_010111001

' _if_14_1:
' _if_14_expression:
' _if_12_false:
' bally==0
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010010_000000000000_000000000000

' BRANCH-IFNOT _if_14_false
  long %0_000_010_1111111111111111_010110111

' _if_14_true:
' bally=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010010_000000000000_000000000001

' dy=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010100_000000000000_000000000001

' ballstatus=3
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000011

' GOTO _if_14_end
  long %0_000_000_1111111111111111_010111001

' _if_14_false:
' bally=bally-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00010010_000000010010_000000000001

' _if_11_end:
' _if_11_false:
' _if_12_end:
' _if_14_end:
' ctrx=ctrx-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00010111_000000010111_000000000001

' _if_15_1:
' _if_15_expression:
' ctrx==0
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010111_000000000000_000000000000

' BRANCH-IFNOT _if_15_false
  long %0_000_010_1111111111111111_011011100

' _if_15_true:
' ctrx=delx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00010111_000000000000_000000010101

' _if_16_1:
' _if_16_expression:
' dx==1
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010011_000000000000_000000000001

' BRANCH-IFNOT _if_16_false
  long %0_000_010_1111111111111111_011010000

' _if_17_1:
' _if_17_expression:
' _if_16_true:
' ballx==47
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010001_000000000000_000000101111

' BRANCH-IFNOT _if_17_false
  long %0_000_010_1111111111111111_011001101

' _if_17_true:
' ballx=46
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010001_000000000000_000000101110

' dx=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010011_000000000000_000000000000

' ballstatus=6
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000110

' GOTO _if_17_end
  long %0_000_000_1111111111111111_011001111

' _if_17_false:
' ballx=ballx+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00010001_000000010001_000000000001

' _if_17_end:
' GOTO _if_16_end
  long %0_000_000_1111111111111111_011011100

' _if_18_1:
' _if_18_expression:
' _if_16_false:
' ballx==0
  long  %10_111_001__00_000_111_10001010_0001_1011
    long %00010001_000000000000_000000000000

' BRANCH-IFNOT _if_18_false
  long %0_000_010_1111111111111111_011011010

' _if_18_true:
' ballx=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010001_000000000000_000000000001

' dx=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00010011_000000000000_000000000001

' ballstatus=5
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000101

' GOTO _if_18_end
  long %0_000_000_1111111111111111_011011100

' _if_18_false:
' ballx=ballx-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00010001_000000010001_000000000001

' _if_15_end:
' _if_15_false:
' _if_16_end:
' _if_18_end:
' x=ballx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000110_000000000000_000000010001

' y=bally
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000111_000000000000_000000010010

' call graphics:getPoint
  long %0_000_001_0000000000000011_000000110

' _if_19_1:
' _if_19_expression:
' c!=0
  long  %10_111_001__00_000_111_10001010_0010_1011
    long %00001000_000000000000_000000000000

' BRANCH-IFNOT _if_19_false
  long %0_000_010_1111111111111111_011100110

' _if_19_true:
' ballstatus=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00011001_000000000000_000000000001

' _if_19_end:
' _if_19_false:
' c=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00001000_000000000000_000000000001

' x=ballx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000110_000000000000_000000010001

' y=bally
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000111_000000000000_000000010010

' call graphics:plot
  long %0_000_001_0000000000000011_000010000

' return
  long %0_001_0000000000000000000000000000

' DrawPaddle:
' c=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00001000_000000000000_000000000001

' y=z-w
  long  %10_111_001__00_000_111_11000000_0000_0001
    long %00000111_000000000001_000000000010

' _if_20_1:
' _if_20_expression:
' _loop_2_start:
' y<=z+w
  long  %10_111_001__00_000_111_11000000_0100_0000
    long %00000111_000000000001_000000000010

' BRANCH-IFNOT _if_20_false
  long %0_000_010_1111111111111111_011111001

' _if_20_true:
' call graphics:plot
  long %0_000_001_0000000000000011_000010000

' _loop_2_continue:
' ++y
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000111_000000000111_000000000001

' GOTO _loop_2_start
  long %0_000_000_1111111111111111_011110010

' _loop_2_end:
' _if_20_end:
' _if_20_false:
' return
  long %0_001_0000000000000000000000000000

' _if_21_1:
' _if_21_expression:
' ConvertAnalogStick:
' y<64
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000111_000000000000_000001000000

' BRANCH-IFNOT _if_21_false
  long %0_000_010_1111111111111111_011111111

' _if_21_true:
' y=64
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000001000000

' _if_22_1:
' _if_22_expression:
' _if_21_end:
' _if_21_false:
' y>191
  long  %10_111_001__00_000_111_10001010_0101_1011
    long %00000111_000000000000_000010111111

' BRANCH-IFNOT _if_22_false
  long %0_000_010_1111111111111111_100000100

' _if_22_true:
' y=191
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000010111111

' _if_22_end:
' _if_22_false:
' y=y-64
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000111_000000000111_000001000000

' y=y>>2
  long  %10_111_001__00_000_111_11000010_0000_0110
    long %00000111_000000000111_000000000010

' y=31-y
  long  %10_111_001__00_000_111_11001000_0000_0001
    long %00000111_000000011111_000000000111

' return
  long %0_001_0000000000000000000000000000

' STOP
  long %0_000_111_0000000000000000000000000

' Cluster 'Sound'
' init:
' return
  long %0_001_0000000000000000000000000000

' player1hit:
' memcopy player1,0xC0,40
  long %0_110_0_000101000_000001110_011000000

' script 0xC0
  long %10_011_000000000000000001100000000
' return
  long %0_001_0000000000000000000000000000

' player2hit:
' memcopy player2,0xC0,40
  long %0_110_0_000101000_000010010_011000000

' script 0xC0
  long %10_011_000000000000000001100000000
' return
  long %0_001_0000000000000000000000000000

' missBall:
' memcopy miss,0xC0,40
  long %0_110_0_000101000_000010110_011000000

' script 0xC0
  long %10_011_000000000000000001100000000
' return
  long %0_001_0000000000000000000000000000

' playerWin:
' memcopy win,0xC0,40
  long %0_110_0_000101000_000100101_011000000

' script 0xC0
  long %10_011_000000000000000001100000000
' return
  long %0_001_0000000000000000000000000000

' STOP
  long %0_000_111_0000000000000000000000000

' Player1:
' SEQUENCE {
  byte  $fe, $7, $ff, $77, $4, $8, $19, $10, $e8, $81, $0, $10, $7a, $80, $0, $30
' Player2:
' SEQUENCE {
  byte  $fe, $7, $ff, $77, $4, $8, $25, $10, $e8, $81, $0, $10, $7a, $80, $0, $30
' Miss:
' SEQUENCE {
  byte  $fc, $7, $ff, $77, $4, $8, $4, $9, $a, $10, $c, $11, $f4, $80, $0, $10, $0, $11, $3d, $80, $a, $10, $c, $11, $f4, $80, $0, $10, $0, $11, $3d, $80, $a, $10, $c, $11, $f4, $80, $0, $10, $0, $11, $3d, $80, $a, $10, $c, $11, $f4, $80, $0, $10, $0, $11, $3d, $80, $0, $30
' padalign(4)
  byte  $0, $0
' Win:
' SEQUENCE {
  byte  $f8, $7, $ff, $77, $4, $8, $4, $9, $4, $a, $25, $10, $29, $11, $2c, $12, $d0, $83, $0, $10, $0, $11, $0, $12, $f4, $80, $25, $10, $2a, $11, $2e, $12, $d1, $83, $0, $10, $0, $11, $0, $12, $f4, $80, $25, $10, $29, $11, $2c, $12, $a1, $87, $0, $10, $0, $11, $0, $12, $e8, $81, $0, $30
' Cluster 'Score'
' DrawDigit:
' val = val + @digitSegmentInfo
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000000_000000000000_000110000100

' val = current(val)
  long  %10_111_001__01_000_110_10001011_0000_1011
    long %00000000_000000000000_000000000000
    long %1000000100000000000000000

' sx=x
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000011_000000000000_000000000110

' sy=y
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000100_000000000000_000000000111

' _if_1_1:
' _if_1_expression:
' val&64
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000001000000

' BRANCH-IFNOT _if_1_false
  long %0_000_010_1111111111111111_000001101

' _if_1_true:
' call HorizSeg
  long %0_000_001_1111111111111111_001000000

' _if_2_1:
' _if_2_expression:
' _if_1_end:
' _if_1_false:
' val&32
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000100000

' BRANCH-IFNOT _if_2_false
  long %0_000_010_1111111111111111_000010101

' _if_2_true:
' x=x+w
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000110_000000000110_000000000010

' x=x-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000110_000000000110_000000000001

' call VertSeg
  long %0_000_001_1111111111111111_001010000

' _if_3_1:
' _if_3_expression:
' _if_2_end:
' _if_2_false:
' val&16
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000010000

' BRANCH-IFNOT _if_3_false
  long %0_000_010_1111111111111111_000100001

' _if_3_true:
' x=x+w
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000110_000000000110_000000000010

' x=x-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000110_000000000110_000000000001

' y=y+z
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000111_000000000111_000000000001

' y=y-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000111_000000000111_000000000001

' call VertSeg
  long %0_000_001_1111111111111111_001010000

' _if_4_1:
' _if_4_expression:
' _if_3_end:
' _if_3_false:
' val&8
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000001000

' BRANCH-IFNOT _if_4_false
  long %0_000_010_1111111111111111_000101011

' _if_4_true:
' y=y+z
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000111_000000000111_000000000001

' y=y+z
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000111_000000000111_000000000001

' y=y-2
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000111_000000000111_000000000010

' call HorizSeg
  long %0_000_001_1111111111111111_001000000

' _if_5_1:
' _if_5_expression:
' _if_4_end:
' _if_4_false:
' val&4
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000000100

' BRANCH-IFNOT _if_5_false
  long %0_000_010_1111111111111111_000110011

' _if_5_true:
' y=y+z
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000111_000000000111_000000000001

' y=y-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000111_000000000111_000000000001

' call VertSeg
  long %0_000_001_1111111111111111_001010000

' _if_6_1:
' _if_6_expression:
' _if_5_end:
' _if_5_false:
' val&2
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000000010

' BRANCH-IFNOT _if_6_false
  long %0_000_010_1111111111111111_000110111

' _if_6_true:
' call VertSeg
  long %0_000_001_1111111111111111_001010000

' _if_7_1:
' _if_7_expression:
' _if_6_end:
' _if_6_false:
' val&1
  long  %10_111_001__00_000_111_01100010_0111_0111
    long %00000000_000000000000_000000000001

' BRANCH-IFNOT _if_7_false
  long %0_000_010_1111111111111111_000111111

' _if_7_true:
' y=y+z
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00000111_000000000111_000000000001

' y=y-1
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00000111_000000000111_000000000001

' call HorizSeg
  long %0_000_001_1111111111111111_001000000

' _if_7_end:
' _if_7_false:
' return
  long %0_001_0000000000000000000000000000

' HorizSeg:
' tz=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000101_000000000000_000000000000

' _if_8_1:
' _if_8_expression:
' _loop_1_start:
' tz<w
  long  %10_111_001__00_000_111_10001000_0011_1011
    long %00000101_000000000000_000000000010

' BRANCH-IFNOT _if_8_false
  long %0_000_010_1111111111111111_001001011

' _if_8_true:
' call graphics:plot
  long %0_000_001_0000000000000011_000010000

' x=x+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000110_000000000110_000000000001

' _loop_1_continue:
' ++tz
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000101_000000000101_000000000001

' GOTO _loop_1_start
  long %0_000_000_1111111111111111_001000010

' _loop_1_end:
' _if_8_end:
' _if_8_false:
' x=sx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000110_000000000000_000000000011

' y=sy
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000111_000000000000_000000000100

' return
  long %0_001_0000000000000000000000000000

' VertSeg:
' tz=0
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00000101_000000000000_000000000000

' _if_9_1:
' _if_9_expression:
' _loop_2_start:
' tz<z
  long  %10_111_001__00_000_111_10001000_0011_1011
    long %00000101_000000000000_000000000001

' BRANCH-IFNOT _if_9_false
  long %0_000_010_1111111111111111_001011011

' _if_9_true:
' call graphics:plot
  long %0_000_001_0000000000000011_000010000

' y=y+1
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000111_000000000111_000000000001

' _loop_2_continue:
' ++tz
  long  %10_111_001__00_000_111_11000010_0000_0000
    long %00000101_000000000101_000000000001

' GOTO _loop_2_start
  long %0_000_000_1111111111111111_001010010

' _loop_2_end:
' _if_9_end:
' _if_9_false:
' x=sx
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000110_000000000000_000000000011

' y=sy
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00000111_000000000000_000000000100

' return
  long %0_001_0000000000000000000000000000

' STOP
  long %0_000_111_0000000000000000000000000

' digitSegmentInfo:
' 0b0_1111110
  byte  $7e
' 0b0_0110000
  byte  $30
' 0b0_1101101
  byte  $6d
' 0b0_1111001
  byte  $79
' 0b0_0110011
  byte  $33
' 0b0_1011011
  byte  $5b
' 0b0_0011111
  byte  $1f
' 0b0_1110000
  byte  $70
' 0b0_1111111
  byte  $7f
' 0b0_1110011
  byte  $73
' Cluster 'graphics'
' RefreshScreen:
' mem(REFRESH)=1
  long  %10_111_001__01_000_011_10111010_0000_1011
    long %00000000_000000000000_000000000001
    long %1000000000111111101101100

' return
  long %0_001_0000000000000000000000000000

' ClearScreen:
' memcopy clearFrame,0,48
  long %0_110_0_000110000_001101010_000000000

' return
  long %0_001_0000000000000000000000000000

' GetPoint:
' call CalcMem
  long %0_000_001_1111111111111111_000100000

' c = mem(xr) & bp
  long  %10_111_001__01_000_101_11001100_0000_0111
    long %00001000_000000000000_000000001110
    long %1000000010000000000001001

' _if_1_1:
' _if_1_expression:
' c>0
  long  %10_111_001__00_000_111_10001010_0101_1011
    long %00001000_000000000000_000000000000

' BRANCH-IFNOT _if_1_false
  long %0_000_010_1111111111111111_000001111

' _if_1_true:
' c=1
  long  %10_111_001__00_000_111_10001010_0000_1011
    long %00001000_000000000000_000000000001

' _if_1_end:
' _if_1_false:
' return
  long %0_001_0000000000000000000000000000

' Plot:
' call CalcMem
  long %0_000_001_1111111111111111_000100000

' _if_2_1:
' _if_2_expression:
' c!=0
  long  %10_111_001__00_000_111_10001010_0010_1011
    long %00001000_000000000000_000000000000

' BRANCH-IFNOT _if_2_false
  long %0_000_010_1111111111111111_000011001

' _if_2_true:
' mem(xr) = mem(xr) | bp
  long  %10_111_001__10_000_001_11111100_0000_1000
    long %00000000_000000000000_000000001110
    long %1000000010000000000001001
    long %1000000010000000000001001

' GOTO _if_2_end
  long %0_000_000_1111111111111111_000011111

' _if_2_false:
' bp = ~bp
  long  %10_111_001__00_000_111_10001000_0000_1010
    long %00001110_000000000000_000000001110

' mem(xr) = mem(xr) & bp
  long  %10_111_001__10_000_001_11111100_0000_0111
    long %00000000_000000000000_000000001110
    long %1000000010000000000001001
    long %1000000010000000000001001

' _if_2_end:
' return
  long %0_001_0000000000000000000000000000

' CalcMem:
' tx = x
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00001011_000000000000_000000000110

' ty = y
  long  %10_111_001__00_000_111_10001000_0000_1011
    long %00001100_000000000000_000000000111

' _if_3_1:
' _if_3_expression:
' y<16
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000111_000000000000_000000010000

' BRANCH-IFNOT _if_3_false
  long %0_000_010_1111111111111111_001000110

' _if_4_1:
' _if_4_expression:
' _if_3_true:
' x<24
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000110_000000000000_000000011000

' BRANCH-IFNOT _if_4_false
  long %0_000_010_1111111111111111_000110111

' _if_4_true:
' xr = tx * 2
  long  %10_111_001__00_000_111_11000010_0000_0010
    long %00001001_000000001011_000000000010

' yr = ty / 8
  long  %10_111_001__00_000_111_11000010_0000_0011
    long %00001010_000000001100_000000001000

' yo = ty % 8
  long  %10_111_001__00_000_111_11000010_0000_0100
    long %00001101_000000001100_000000001000

' bp = 128 >> yo
  long  %10_111_001__00_000_111_11001000_0000_0110
    long %00001110_000010000000_000000001101

' xr = 191 - xr
  long  %10_111_001__00_000_111_11001000_0000_0001
    long %00001001_000010111111_000000001001

' xr = xr - yr
  long  %10_111_001__00_000_111_11000000_0000_0001
    long %00001001_000000001001_000000001010

' GOTO _if_4_end
  long %0_000_000_1111111111111111_001000101

' _if_4_false:
' tx = tx - 24
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00001011_000000001011_000000011000

' xr = tx * 2
  long  %10_111_001__00_000_111_11000010_0000_0010
    long %00001001_000000001011_000000000010

' yr = ty / 8
  long  %10_111_001__00_000_111_11000010_0000_0011
    long %00001010_000000001100_000000001000

' yo = ty % 8
  long  %10_111_001__00_000_111_11000010_0000_0100
    long %00001101_000000001100_000000001000

' bp = 128 >> yo
  long  %10_111_001__00_000_111_11001000_0000_0110
    long %00001110_000010000000_000000001101

' xr = 143 - xr
  long  %10_111_001__00_000_111_11001000_0000_0001
    long %00001001_000010001111_000000001001

' xr = xr - yr
  long  %10_111_001__00_000_111_11000000_0000_0001
    long %00001001_000000001001_000000001010

' _if_4_end:
' GOTO _if_3_end
  long %0_000_000_1111111111111111_001101000

' _if_5_1:
' _if_5_expression:
' _if_3_false:
' x<24
  long  %10_111_001__00_000_111_10001010_0011_1011
    long %00000110_000000000000_000000011000

' BRANCH-IFNOT _if_5_false
  long %0_000_010_1111111111111111_001011000

' _if_5_true:
' ty=ty-16
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00001100_000000001100_000000010000

' xr = tx * 2
  long  %10_111_001__00_000_111_11000010_0000_0010
    long %00001001_000000001011_000000000010

' yr = ty / 8
  long  %10_111_001__00_000_111_11000010_0000_0011
    long %00001010_000000001100_000000001000

' yo = ty % 8
  long  %10_111_001__00_000_111_11000010_0000_0100
    long %00001101_000000001100_000000001000

' bp = 1 << yo
  long  %10_111_001__00_000_111_11001000_0000_0101
    long %00001110_000000000001_000000001101

' xr = 48 + xr
  long  %10_111_001__00_000_111_11001000_0000_0000
    long %00001001_000000110000_000000001001

' xr = xr + yr
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00001001_000000001001_000000001010

' GOTO _if_5_end
  long %0_000_000_1111111111111111_001101000

' _if_5_false:
' ty=ty-16
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00001100_000000001100_000000010000

' tx=tx-24
  long  %10_111_001__00_000_111_11000010_0000_0001
    long %00001011_000000001011_000000011000

' xr = tx * 2
  long  %10_111_001__00_000_111_11000010_0000_0010
    long %00001001_000000001011_000000000010

' yr = ty / 8
  long  %10_111_001__00_000_111_11000010_0000_0011
    long %00001010_000000001100_000000001000

' yo = ty % 8
  long  %10_111_001__00_000_111_11000010_0000_0100
    long %00001101_000000001100_000000001000

' bp = 1 << yo
  long  %10_111_001__00_000_111_11001000_0000_0101
    long %00001110_000000000001_000000001101

' xr = 0 + xr
  long  %10_111_001__00_000_111_11001000_0000_0000
    long %00001001_000000000000_000000001001

' xr = xr + yr
  long  %10_111_001__00_000_111_11000000_0000_0000
    long %00001001_000000001001_000000001010

' _if_3_end:
' _if_5_end:
' return
  long %0_001_0000000000000000000000000000

' STOP
  long %0_000_111_0000000000000000000000000

' clearFrame:
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
' 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0
