' Cluster ''
' @0    (0)
' MEM(M_INPUTMODE)=3
  long  %1_111_0001__01_000_011_10111010_0000_1011
    long %00000000_000000000000_000000000011
    long %1000000000111100000010011

' @12    (3)
' INITTILES solids, 10,4
  long %1_111_0010___00_0_01000___0000001000101100
  long %0000000000001010__0000000000000100
' @20    (5)
' _if_1_1:
' _if_1_expression:
' _loop_1_start:
' _loop_1_continue:
' true
  long  %1_111_0001__00_000_111_00101010_0111_1011
    long %00000000_000000000000_000000000001

' @28    (7)
' BRANCH-IFNOT _if_1_false
' CLUSTER:65535   OFFSET:16
  long %0_000_010_1111111111111111_000010000

' @32    (8)
' _if_1_true:
' cs = 2
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000110_000000000000_000000000010

' @40    (10)
' call drawPics
' CLUSTER:65535   OFFSET:16
  long %0_000_001_1111111111111111_000010000

' @44    (11)
' call getNextColor
' CLUSTER:65535   OFFSET:94
  long %0_000_001_1111111111111111_001011110

' @48    (12)
' call drawPics
' CLUSTER:65535   OFFSET:16
  long %0_000_001_1111111111111111_000010000

' @52    (13)
' call getNextColor
' CLUSTER:65535   OFFSET:94
  long %0_000_001_1111111111111111_001011110

' @56    (14)
' call drawPics
' CLUSTER:65535   OFFSET:16
  long %0_000_001_1111111111111111_000010000

' @60    (15)
' GOTO _loop_1_start
' CLUSTER:65535   OFFSET:5
  long %0_000_000_1111111111111111_000000101

' @64    (16)
' drawPics:
' _loop_1_end:
' _if_1_end:
' _if_1_false:
' cls
  long  %1_111_0010___00_0_00000___00000000___00000000
    long %00100000_00011010_0000000000100000
' @72    (18)
' SETCURSOR 0,0
  long %1_010_0010___00_0_00100___00000000__00000000
' @76    (19)
' rx=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000000

' @84    (21)
' ry=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00001000_000000000000_000000000000

' @92    (23)
' rw=2
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00001001_000000000000_000000000010

' @100    (25)
' rh=2
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00001010_000000000000_000000000010

' @108    (27)
' rt=4106
  long  %1_111_0001__01_000_110_10001010_0000_1011
    long %00001011_000000000000_000000000000
    long %1000000001010

' @120    (30)
' ptr = M_ColorScheme_1
  long  %1_111_0001__01_000_110_10001010_0000_1011
    long %00000101_000000000000_000000000000
    long %111111110100100

' @132    (33)
' y=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000001_000000000000_000000000000

' @140    (35)
' _if_2_1:
' _if_2_expression:
' _loop_2_start:
' y<6
  long  %1_111_0001__00_000_111_10001010_0011_1011
    long %00000001_000000000000_000000000110

' @148    (37)
' BRANCH-IFNOT _if_2_false
' CLUSTER:65535   OFFSET:90
  long %0_000_010_1111111111111111_001011010

' @152    (38)
' _if_2_true:
' x=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000000_000000000000_000000000000

' @160    (40)
' _if_3_1:
' _if_3_expression:
' _loop_3_start:
' x<2
  long  %1_111_0001__00_000_111_10001010_0011_1011
    long %00000000_000000000000_000000000010

' @168    (42)
' BRANCH-IFNOT _if_3_false
' CLUSTER:65535   OFFSET:83
  long %0_000_010_1111111111111111_001010011

' @172    (43)
' _if_3_true:
' z=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000010_000000000000_000000000000

' @180    (45)
' _if_4_1:
' _if_4_expression:
' _loop_4_start:
' z<4
  long  %1_111_0001__00_000_111_10001010_0011_1011
    long %00000010_000000000000_000000000100

' @188    (47)
' BRANCH-IFNOT _if_4_false
' CLUSTER:65535   OFFSET:74
  long %0_000_010_1111111111111111_001001010

' @192    (48)
' _if_5_1:
' _if_5_expression:
' _if_4_true:
' cs>255
  long  %1_111_0001__00_000_111_10001010_0101_1011
    long %00000110_000000000000_000011111111

' @200    (50)
' BRANCH-IFNOT _if_5_false
' CLUSTER:65535   OFFSET:52
  long %0_000_010_1111111111111111_000110100

' @204    (51)
' _if_5_true:
' goto abort
' CLUSTER:65535   OFFSET:90
  long %0_000_000_1111111111111111_001011010

' @208    (52)
' _if_5_end:
' _if_5_false:
' rectangle rx
  long  %1_010_0000___00_1_00000___00000000___00000111
' @212    (53)
' mem(ptr) = cs
  long  %1_111_0001__01_000_011_10111000_0000_1011
    long %00000000_000000000000_000000000110
    long %1000000010000000000000101

' @224    (56)
' cx = rx
  long  %1_111_0001__00_000_111_10001000_0000_1011
    long %00001100_000000000000_000000000111

' @232    (58)
' cy = ry+2
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00001101_000000001000_000000000010

' @240    (60)
' setCursor cx
  long %1_010_0100___00_1_00100___00000000__00001100
' @244    (61)
' v = cs
  long  %1_111_0001__00_000_111_10001000_0000_1011
    long %00000100_000000000000_000000000110

' @252    (63)
' call hexByte
' CLUSTER:65535   OFFSET:131
  long %0_000_001_1111111111111111_010000011

' @256    (64)
' ++ptr
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000101_000000000101_000000000001

' @264    (66)
' rx=rx+4
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000111_000000000111_000000000100

' @272    (68)
' ++rt
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00001011_000000001011_000000000001

' @280    (70)
' call getNextColor
' CLUSTER:65535   OFFSET:94
  long %0_000_001_1111111111111111_001011110

' @284    (71)
' _loop_4_continue:
' ++z
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000010_000000000010_000000000001

' @292    (73)
' GOTO _loop_4_start
' CLUSTER:65535   OFFSET:45
  long %0_000_000_1111111111111111_000101101

' @296    (74)
' _loop_4_end:
' _if_4_end:
' _if_4_false:
' rt=rt & 0xFFF0
  long  %1_111_0001__01_000_110_11000010_0000_0111
    long %00001011_000000001011_000000000000
    long %1111111111110000

' @308    (77)
' rt=rt + 4106
  long  %1_111_0001__01_000_110_11000010_0000_0000
    long %00001011_000000001011_000000000000
    long %1000000001010

' @320    (80)
' _loop_3_continue:
' ++x
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000000_000000000000_000000000001

' @328    (82)
' GOTO _loop_3_start
' CLUSTER:65535   OFFSET:40
  long %0_000_000_1111111111111111_000101000

' @332    (83)
' _loop_3_end:
' _if_3_end:
' _if_3_false:
' rx=0
  long  %1_111_0001__00_000_111_10001010_0000_1011
    long %00000111_000000000000_000000000000

' @340    (85)
' ry=ry+4
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00001000_000000001000_000000000100

' @348    (87)
' _loop_2_continue:
' ++y
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000001_000000000001_000000000001

' @356    (89)
' GOTO _loop_2_start
' CLUSTER:65535   OFFSET:35
  long %0_000_000_1111111111111111_000100011

' @360    (90)
' abort:
' _loop_2_end:
' _if_2_end:
' _if_2_false:
' setcursor 0,23
  long %1_010_0010___00_0_00100___00000000__00010111
' @364    (91)
' print "          PRESS ENTER"
  long  %1_010_0000___00_0_00001___0000001010001100
' @368    (92)
' INPUTVAR x
  long %1_010_0000___00_0_00110___00000000___00000000
' @372    (93)
' return
  long %0_001_0000000000000000000000000000

' @376    (94)
' _if_6_1:
' _if_6_expression:
' _loop_5_start:
' _loop_5_continue:
' getNextColor:
' true
  long  %1_111_0001__00_000_111_00101010_0111_1011
    long %00000000_000000000000_000000000001

' @384    (96)
' BRANCH-IFNOT _if_6_false
' CLUSTER:65535   OFFSET:126
  long %0_000_010_1111111111111111_001111110

' @388    (97)
' _if_6_true:
' ++cs
  long  %1_111_0001__00_000_111_11000010_0000_0000
    long %00000110_000000000110_000000000001

' @396    (99)
' v = cs & 15
  long  %1_111_0001__00_000_111_11000010_0000_0111
    long %00000100_000000000110_000000001111

' @404    (101)
' cx = cs >> 4
  long  %1_111_0001__00_000_111_11000010_0000_0110
    long %00001100_000000000110_000000000100

' @412    (103)
' cy = v & 8
  long  %1_111_0001__00_000_111_11000010_0000_0111
    long %00001101_000000000100_000000001000

' @420    (105)
' _if_7_expression:
' GOTO _if_7_2
' CLUSTER:65535   OFFSET:110
  long %0_000_000_1111111111111111_001101110

' @424    (106)
' _if_7_1:
' v==1
  long  %1_111_0001__00_000_111_10001010_0001_1011
    long %00000100_000000000000_000000000001

' @432    (108)
' BRANCH-IFNOT _if_7_false
' CLUSTER:65535   OFFSET:117
  long %0_000_010_1111111111111111_001110101

' @436    (109)
' GOTO _if_7_true
' CLUSTER:65535   OFFSET:116
  long %0_000_000_1111111111111111_001110100

' @440    (110)
' _if_7_2:
' v==9
  long  %1_111_0001__00_000_111_10001010_0001_1011
    long %00000100_000000000000_000000001001

' @448    (112)
' BRANCH-IF _if_7_true
' CLUSTER:65535   OFFSET:116
  long %0_000_011_1111111111111111_001110100

' @452    (113)
' _if_7_3:
' v==0
  long  %1_111_0001__00_000_111_10001010_0001_1011
    long %00000100_000000000000_000000000000

' @460    (115)
' BRANCH-IFNOT _if_7_1
' CLUSTER:65535   OFFSET:106
  long %0_000_010_1111111111111111_001101010

' @464    (116)
' _if_7_true:
' GOTO _loop_5_continue
' CLUSTER:65535   OFFSET:94
  long %0_000_000_1111111111111111_001011110

' @468    (117)
' _if_8_1:
' _if_8_expression:
' _if_7_end:
' _if_7_false:
' cy==0
  long  %1_111_0001__00_000_111_10001010_0001_1011
    long %00001101_000000000000_000000000000

' @476    (119)
' BRANCH-IFNOT _if_8_false
' CLUSTER:65535   OFFSET:124
  long %0_000_010_1111111111111111_001111100

' @480    (120)
' _if_8_2:
' cx>0
  long  %1_111_0001__00_000_111_10001010_0101_1011
    long %00001100_000000000000_000000000000

' @488    (122)
' BRANCH-IFNOT _if_8_false
' CLUSTER:65535   OFFSET:124
  long %0_000_010_1111111111111111_001111100

' @492    (123)
' _if_8_true:
' GOTO _loop_5_continue
' CLUSTER:65535   OFFSET:94
  long %0_000_000_1111111111111111_001011110

' @496    (124)
' _if_8_end:
' _if_8_false:
' return
  long %0_001_0000000000000000000000000000

' @500    (125)
' GOTO _loop_5_start
' CLUSTER:65535   OFFSET:94
  long %0_000_000_1111111111111111_001011110

' @504    (126)
' hexChar:
' _loop_5_end:
' _if_6_end:
' _if_6_false:
' c = c & 15
  long  %1_111_0001__00_000_111_11000010_0000_0111
    long %00000011_000000000011_000000001111

' @512    (128)
' print hextrans[c]
  long  %1_111_0010___00_0_00010___0000001001101100
    long %00000000000000000000000000000011
' @520    (130)
' return
  long %0_001_0000000000000000000000000000

' @524    (131)
' hexByte:
' c = v >> 4
  long  %1_111_0001__00_000_111_11000010_0000_0110
    long %00000011_000000000100_000000000100

' @532    (133)
' call hexChar
' CLUSTER:65535   OFFSET:126
  long %0_000_001_1111111111111111_001111110

' @536    (134)
' c = v
  long  %1_111_0001__00_000_111_10001000_0000_1011
    long %00000011_000000000000_000000000100

' @544    (136)
' call hexChar
' CLUSTER:65535   OFFSET:126
  long %0_000_001_1111111111111111_001111110

' @548    (137)
' return
  long %0_001_0000000000000000000000000000

' @552    (138)
' STOP
' CLUSTER:65535   OFFSET:0
  long %0_000_111_1111111111111111_000000000

' @556    (139)
' solids:
' Tile {
  byte  $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $0, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $55, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $aa, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff, $ff
' @620    (155)
' hextrans:
' "0",0,"1",0,"2",0,"3",0,"4",0,"5",0,"6",0,"7",0
  byte  $30, $0, $31, $0, $32, $0, $33, $0, $34, $0, $35, $0, $36, $0, $37, $0
' @636    (159)
' "8",0,"9",0,"A",0,"B",0,"C",0,"D",0,"E",0,"F",0
  byte  $38, $0, $39, $0, $41, $0, $42, $0, $43, $0, $44, $0, $45, $0, $46, $0
' @652    (163)
' _msg_86:
' "          PRESS ENTER",0
  byte  $20, $20, $20, $20, $20, $20, $20, $20, $20, $20, $50, $52, $45, $53, $53, $20, $45, $4e, $54, $45, $52, $0
